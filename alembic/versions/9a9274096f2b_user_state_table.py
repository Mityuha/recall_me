"""user state table

Revision ID: 9a9274096f2b
Revises: fac317ea3bb9
Create Date: 2023-09-30 14:46:50.771113

"""
from enum import Enum
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "9a9274096f2b"
down_revision: Union[str, None] = "fac317ea3bb9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


class AllEventsState(Enum):
    NO_MESSAGE = 0
    CMD_ALL_EVENTS_SCREEN = 1
    CMD_SINGLE_EVENT_SCREEN = 2
    CRON_NOTIFY_MESSAGE_SCREEN = 3
    CRON_ALL_EVENTS_SCREEN = 4
    CRON_SINGLE_EVENT_SCREEN = 5
    #
    SAVE_EVENTS_SCREEN = 6


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    screen_state_table = op.create_table(
        "screen_state",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("state_id", sa.Integer(), nullable=False),
        sa.Column("state_description", sa.String(length=32), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("state_description"),
        sa.UniqueConstraint("state_id"),
    )
    op.create_table(
        "event_state",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("callback_id", sa.String(length=64), nullable=False),
        sa.Column("user_id", sa.String(length=64), nullable=False),
        sa.Column("previous_state", sa.Integer(), nullable=False),
        sa.Column("current_state", sa.Integer(), nullable=False),
        sa.Column(
            "event_metadata", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["current_state"], ["screen_state.state_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["previous_state"], ["screen_state.state_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("callback_id"),
    )
    # ### end Alembic commands ###

    op.bulk_insert(
        screen_state_table,
        [
            {
                "state_id": s.value,
                "state_description": s.name,
            }
            for s in AllEventsState
        ],
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("event_state")
    op.drop_table("screen_state")
    # ### end Alembic commands ###
